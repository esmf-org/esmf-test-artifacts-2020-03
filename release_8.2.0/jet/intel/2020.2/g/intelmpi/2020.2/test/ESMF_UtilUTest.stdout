build time -- 2021-10-26 04:00:03
MPI startup(): Warning: I_MPI_PMI_LIBRARY will be ignored since the hydra process manager was found
MPI startup(): Warning: I_MPI_PMI_LIBRARY will be ignored since the hydra process manager was found
MPI startup(): Warning: I_MPI_PMI_LIBRARY will be ignored since the hydra process manager was found
MPI startup(): Warning: I_MPI_PMI_LIBRARY will be ignored since the hydra process manager was found
  Beginning Test, file ESMF_UtilUTest.F90, line 124
  NUMBER_OF_PROCESSORS           4
 
  ESMF_VERSION_MAJOR =           8
  ESMF_VERSION_MINOR =           2
  ESMF_VERSION_REVISION      =           0
  ESMF_VERSION_PATCHLEVEL    =           0
  ESMF_VERSION_STRING=8.2.0
  PASS  Comparing numeric and character major version, ESMF_UtilUTest.F90, line 
 153
  PASS  Comparing numeric and character minor version, ESMF_UtilUTest.F90, line 
 164
  PASS  Comparing numeric and character revision, ESMF_UtilUTest.F90, line 179
  PASS  No arg VersionPrint test, ESMF_UtilUTest.F90, line 191
   ESMF_VERSION_STRING:       8.2.0
  PASS  One line VersionPrint test, ESMF_UtilUTest.F90, line 199
   ESMF_VERSION_STRING:       8.2.0
   ESMF_VERSION_STRING_GIT:   ESMF_8_2_0_beta_snapshot_23-1-g304824bdb1
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_MINOR:                   2
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PUBLIC:        T
   ESMF_VERSION_BETASNAPSHOT:  F
 
 Earth System Modeling Framework
 
 Copyright (c) 2002-2021 University Corporation for Atmospheric Research,
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 University of Michigan, National Centers for Environmental Prediction,
 Los Alamos National Laboratory, Argonne National Laboratory,
 NASA Goddard Space Flight Center.
 All rights reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the 'Software'), to
 deal with the Software without restriction, including without limitation the
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 sell copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimers.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimers in the
       documentation and/or other materials provided with the distribution.
    3. Neither the names of the organizations developing this software, nor
       the names of its contributors may be used to endorse or promote products
       derived from this Software without specific prior written permission.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PASS  Multi-line VersionPrint test, ESMF_UtilUTest.F90, line 207
   ESMF_VERSION_STRING:       8.2.0
 
   ESMF_VERSION_STRING:       8.2.0
   ESMF_VERSION_STRING_GIT:   ESMF_8_2_0_beta_snapshot_23-1-g304824bdb1
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_MINOR:                   2
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PUBLIC:        T
   ESMF_VERSION_BETASNAPSHOT:  F
 
 Earth System Modeling Framework
 
 Copyright (c) 2002-2021 University Corporation for Atmospheric Research,
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 University of Michigan, National Centers for Environmental Prediction,
 Los Alamos National Laboratory, Argonne National Laboratory,
 NASA Goddard Space Flight Center.
 All rights reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the 'Software'), to
 deal with the Software without restriction, including without limitation the
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 sell copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimers.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimers in the
       documentation and/or other materials provided with the distribution.
    3. Neither the names of the organizations developing this software, nor
       the names of its contributors may be used to endorse or promote products
       derived from this Software without specific prior written permission.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PASS  Single and multi-line VersionPrint test, ESMF_UtilUTest.F90, line 215
  Beginning Test, file ESMF_UtilUTest.F90, line 124
  NUMBER_OF_PROCESSORS           4
  Beginning Test, file ESMF_UtilUTest.F90, line 124
  Beginning Test, file ESMF_UtilUTest.F90, line 124
  NUMBER_OF_PROCESSORS           4
  NUMBER_OF_PROCESSORS           4
 
 
 
  ESMF_VERSION_MAJOR =           8
  ESMF_VERSION_MINOR =           2
  ESMF_VERSION_MAJOR =           8
  ESMF_VERSION_MAJOR =           8
  ESMF_VERSION_REVISION      =           0
  ESMF_VERSION_MINOR =           2
  ESMF_VERSION_MINOR =           2
  ESMF_VERSION_PATCHLEVEL    =           0
  ESMF_VERSION_REVISION      =           0
  ESMF_VERSION_REVISION      =           0
  ESMF_VERSION_STRING=8.2.0
  ESMF_VERSION_PATCHLEVEL    =           0
  PASS  Comparing numeric and character major version, ESMF_UtilUTest.F90, line 
  ESMF_VERSION_PATCHLEVEL    =           0
  ESMF_VERSION_STRING=8.2.0
  PASS  Comparing numeric and character major version, ESMF_UtilUTest.F90, line 
  ESMF_VERSION_STRING=8.2.0
  PASS  Comparing numeric and character major version, ESMF_UtilUTest.F90, line 
 153
 153
  PASS  Comparing numeric and character minor version, ESMF_UtilUTest.F90, line 
 153
  PASS  Comparing numeric and character minor version, ESMF_UtilUTest.F90, line 
  PASS  Comparing numeric and character minor version, ESMF_UtilUTest.F90, line 
 164
 164
 164
  PASS  Comparing numeric and character revision, ESMF_UtilUTest.F90, line 179
  PASS  Comparing numeric and character revision, ESMF_UtilUTest.F90, line 179
  PASS  Comparing numeric and character revision, ESMF_UtilUTest.F90, line 179
  PASS  No arg VersionPrint test, ESMF_UtilUTest.F90, line 191
  PASS  No arg VersionPrint test, ESMF_UtilUTest.F90, line 191
  PASS  No arg VersionPrint test, ESMF_UtilUTest.F90, line 191
   ESMF_VERSION_STRING:       8.2.0
   ESMF_VERSION_STRING:       8.2.0
   ESMF_VERSION_STRING:       8.2.0
  PASS  One line VersionPrint test, ESMF_UtilUTest.F90, line 199
  PASS  One line VersionPrint test, ESMF_UtilUTest.F90, line 199
  PASS  One line VersionPrint test, ESMF_UtilUTest.F90, line 199
   ESMF_VERSION_STRING:       8.2.0
   ESMF_VERSION_STRING:       8.2.0
   ESMF_VERSION_STRING:       8.2.0
   ESMF_VERSION_STRING_GIT:   ESMF_8_2_0_beta_snapshot_23-1-g304824bdb1
   ESMF_VERSION_STRING_GIT:   ESMF_8_2_0_beta_snapshot_23-1-g304824bdb1
   ESMF_VERSION_STRING_GIT:   ESMF_8_2_0_beta_snapshot_23-1-g304824bdb1
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_MINOR:                   2
   ESMF_VERSION_MINOR:                   2
   ESMF_VERSION_MINOR:                   2
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PUBLIC:        T
   ESMF_VERSION_PUBLIC:        T
   ESMF_VERSION_PUBLIC:        T
   ESMF_VERSION_BETASNAPSHOT:  F
   ESMF_VERSION_BETASNAPSHOT:  F
   ESMF_VERSION_BETASNAPSHOT:  F
 
 
 
 Earth System Modeling Framework
 Earth System Modeling Framework
 
 
 Earth System Modeling Framework
 Copyright (c) 2002-2021 University Corporation for Atmospheric Research,
 Copyright (c) 2002-2021 University Corporation for Atmospheric Research,
 
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 Copyright (c) 2002-2021 University Corporation for Atmospheric Research,
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 University of Michigan, National Centers for Environmental Prediction,
 University of Michigan, National Centers for Environmental Prediction,
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 Los Alamos National Laboratory, Argonne National Laboratory,
 Los Alamos National Laboratory, Argonne National Laboratory,
 University of Michigan, National Centers for Environmental Prediction,
 NASA Goddard Space Flight Center.
 NASA Goddard Space Flight Center.
 Los Alamos National Laboratory, Argonne National Laboratory,
 All rights reserved.
 All rights reserved.
 NASA Goddard Space Flight Center.
 
 
 All rights reserved.
 Permission is hereby granted, free of charge, to any person obtaining a copy
 Permission is hereby granted, free of charge, to any person obtaining a copy
 
 of this software and associated documentation files (the 'Software'), to
 of this software and associated documentation files (the 'Software'), to
 Permission is hereby granted, free of charge, to any person obtaining a copy
 deal with the Software without restriction, including without limitation the
 deal with the Software without restriction, including without limitation the
 of this software and associated documentation files (the 'Software'), to
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 deal with the Software without restriction, including without limitation the
 sell copies of the Software, and to permit persons to whom the Software is
 sell copies of the Software, and to permit persons to whom the Software is
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 furnished to do so, subject to the following conditions:
 furnished to do so, subject to the following conditions:
    1. Redistributions of source code must retain the above copyright notice,
    1. Redistributions of source code must retain the above copyright notice,
 sell copies of the Software, and to permit persons to whom the Software is
       this list of conditions and the following disclaimers.
       this list of conditions and the following disclaimers.
 furnished to do so, subject to the following conditions:
    2. Redistributions in binary form must reproduce the above copyright
    2. Redistributions in binary form must reproduce the above copyright
    1. Redistributions of source code must retain the above copyright notice,
       notice, this list of conditions and the following disclaimers in the
       notice, this list of conditions and the following disclaimers in the
       this list of conditions and the following disclaimers.
       documentation and/or other materials provided with the distribution.
       documentation and/or other materials provided with the distribution.
    2. Redistributions in binary form must reproduce the above copyright
    3. Neither the names of the organizations developing this software, nor
    3. Neither the names of the organizations developing this software, nor
       notice, this list of conditions and the following disclaimers in the
       the names of its contributors may be used to endorse or promote products
       the names of its contributors may be used to endorse or promote products
       documentation and/or other materials provided with the distribution.
       derived from this Software without specific prior written permission.
       derived from this Software without specific prior written permission.
    3. Neither the names of the organizations developing this software, nor
 
 
       the names of its contributors may be used to endorse or promote products
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       derived from this Software without specific prior written permission.
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 WITH THE SOFTWARE.
 WITH THE SOFTWARE.
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  PASS  Multi-line VersionPrint test, ESMF_UtilUTest.F90, line 207
  PASS  Multi-line VersionPrint test, ESMF_UtilUTest.F90, line 207
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
   ESMF_VERSION_STRING:       8.2.0
   ESMF_VERSION_STRING:       8.2.0
  PASS  Multi-line VersionPrint test, ESMF_UtilUTest.F90, line 207
   ESMF_VERSION_STRING:       8.2.0
 
 
   ESMF_VERSION_STRING:       8.2.0
   ESMF_VERSION_STRING:       8.2.0
   ESMF_VERSION_STRING_GIT:   ESMF_8_2_0_beta_snapshot_23-1-g304824bdb1
   ESMF_VERSION_STRING_GIT:   ESMF_8_2_0_beta_snapshot_23-1-g304824bdb1
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_MAJOR:                   8
 
   ESMF_VERSION_MINOR:                   2
   ESMF_VERSION_MINOR:                   2
   ESMF_VERSION_STRING:       8.2.0
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_STRING_GIT:   ESMF_8_2_0_beta_snapshot_23-1-g304824bdb1
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_PUBLIC:        T
   ESMF_VERSION_PUBLIC:        T
   ESMF_VERSION_MINOR:                   2
   ESMF_VERSION_BETASNAPSHOT:  F
   ESMF_VERSION_BETASNAPSHOT:  F
   ESMF_VERSION_REVISION:                0
 
   ESMF_VERSION_PATCHLEVEL:              0
 
 Earth System Modeling Framework
   ESMF_VERSION_PUBLIC:        T
 Earth System Modeling Framework
 
 
   ESMF_VERSION_BETASNAPSHOT:  F
 Copyright (c) 2002-2021 University Corporation for Atmospheric Research,
 Copyright (c) 2002-2021 University Corporation for Atmospheric Research,
 
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 Earth System Modeling Framework
 University of Michigan, National Centers for Environmental Prediction,
 University of Michigan, National Centers for Environmental Prediction,
 
 Los Alamos National Laboratory, Argonne National Laboratory,
 Los Alamos National Laboratory, Argonne National Laboratory,
 Copyright (c) 2002-2021 University Corporation for Atmospheric Research,
 NASA Goddard Space Flight Center.
 NASA Goddard Space Flight Center.
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 All rights reserved.
 All rights reserved.
 University of Michigan, National Centers for Environmental Prediction,
 
 
 Los Alamos National Laboratory, Argonne National Laboratory,
 Permission is hereby granted, free of charge, to any person obtaining a copy
 Permission is hereby granted, free of charge, to any person obtaining a copy
 NASA Goddard Space Flight Center.
 of this software and associated documentation files (the 'Software'), to
 of this software and associated documentation files (the 'Software'), to
 All rights reserved.
 deal with the Software without restriction, including without limitation the
 deal with the Software without restriction, including without limitation the
 
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 Permission is hereby granted, free of charge, to any person obtaining a copy
 sell copies of the Software, and to permit persons to whom the Software is
 sell copies of the Software, and to permit persons to whom the Software is
 of this software and associated documentation files (the 'Software'), to
 furnished to do so, subject to the following conditions:
 furnished to do so, subject to the following conditions:
 deal with the Software without restriction, including without limitation the
    1. Redistributions of source code must retain the above copyright notice,
    1. Redistributions of source code must retain the above copyright notice,
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
       this list of conditions and the following disclaimers.
       this list of conditions and the following disclaimers.
 sell copies of the Software, and to permit persons to whom the Software is
    2. Redistributions in binary form must reproduce the above copyright
    2. Redistributions in binary form must reproduce the above copyright
 furnished to do so, subject to the following conditions:
       notice, this list of conditions and the following disclaimers in the
       notice, this list of conditions and the following disclaimers in the
    1. Redistributions of source code must retain the above copyright notice,
       documentation and/or other materials provided with the distribution.
       documentation and/or other materials provided with the distribution.
       this list of conditions and the following disclaimers.
    3. Neither the names of the organizations developing this software, nor
    3. Neither the names of the organizations developing this software, nor
    2. Redistributions in binary form must reproduce the above copyright
       the names of its contributors may be used to endorse or promote products
       the names of its contributors may be used to endorse or promote products
       notice, this list of conditions and the following disclaimers in the
       derived from this Software without specific prior written permission.
       derived from this Software without specific prior written permission.
       documentation and/or other materials provided with the distribution.
 
 
    3. Neither the names of the organizations developing this software, nor
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
       the names of its contributors may be used to endorse or promote products
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
       derived from this Software without specific prior written permission.
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 WITH THE SOFTWARE.
 WITH THE SOFTWARE.
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  PASS  Single and multi-line VersionPrint test, ESMF_UtilUTest.F90, line 215
  PASS  Single and multi-line VersionPrint test, ESMF_UtilUTest.F90, line 215
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PASS  Single and multi-line VersionPrint test, ESMF_UtilUTest.F90, line 215
  PASS  Testing ESMF_UtilIOUnitGet, obtaining and opening units, ESMF_UtilUTest.
 F90, line 240
  PASS  Testing ESMF_UtilIOUnitGet, obtaining and opening units, ESMF_UtilUTest.
 F90, line 240
  PASS  Testing ESMF_UtilIOUnitFlush, get a free unit, ESMF_UtilUTest.F90, line 
 257
  PASS  ESMF_UtilIOUnitFlush, open scratch file: IOtempfile_03, ESMF_UtilUTest.F
 90, line 266
  PASS  Testing ESMF_UtilIOUnitFlush, get a free unit, ESMF_UtilUTest.F90, line 
 257
  PASS  ESMF_UtilIOUnitFlush, open scratch file: IOtempfile_02, ESMF_UtilUTest.F
 90, line 266
  PASS  ESMF_UtilIOUnitFlush, flush the scratch file, ESMF_UtilUTest.F90, line 2
 75
  PASS  Testing ESMF_UtilGetArgC, command line argument count, ESMF_UtilUTest.F9
 0, line 290
  PASS  Testing ESMF_UtilGetArgC, command line argument count value, ESMF_UtilUT
 est.F90, line 297
  PASS  Testing ESMF_UtilGetArgC, argindex < 0, ESMF_UtilUTest.F90, line 305
 command name = ./ESMF_UtilUTest
  PASS  Testing ESMF_UtilGetArgC, get command name, ESMF_UtilUTest.F90, line 314
  PASS  Testing ESMF_UtilGetArgC, get truncated command name, ESMF_UtilUTest.F90
 , line 322
 arg_len =          16 , len_trim (arg) =          16
  PASS  ESMF_UtilIOUnitFlush, flush the scratch file, ESMF_UtilUTest.F90, line 2
 75
  PASS  Testing ESMF_UtilGetArgC, compare arg lengths, ESMF_UtilUTest.F90, line 
 332
  PASS  Testing ESMF_UtilGetArgC, argindex > nargs, ESMF_UtilUTest.F90, line 342
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
  PASS  Testing ESMF_UtilGetArgC, command line argument count, ESMF_UtilUTest.F9
 0, line 290
  PASS  Testing ESMF_UtilGetArgC, command line argument count value, ESMF_UtilUT
 est.F90, line 297
  PASS  Testing ESMF_UtilGetArgC, argindex < 0, ESMF_UtilUTest.F90, line 305
 command name = ./ESMF_UtilUTest
  PASS  Testing ESMF_UtilGetArgC, get command name, ESMF_UtilUTest.F90, line 314
  PASS  Testing ESMF_UtilGetArgC, get truncated command name, ESMF_UtilUTest.F90
 , line 322
 arg_len =          16 , len_trim (arg) =          16
  PASS  Testing ESMF_UtilGetArgC, compare arg lengths, ESMF_UtilUTest.F90, line 
 332
  PASS  Testing ESMF_UtilGetArgC, argindex > nargs, ESMF_UtilUTest.F90, line 342
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
 351
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
 351
 360
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
  PASS  Testing ascending real sort, ESMF_UtilUTest.F90, line 375
 360
  PASS  Testing ascending real sort, ESMF_UtilUTest.F90, line 375
  PASS  Testing sorted ascending real results, ESMF_UtilUTest.F90, line 389
  PASS  Testing descending real sort, ESMF_UtilUTest.F90, line 398
  PASS  Testing sorted ascending real results, ESMF_UtilUTest.F90, line 389
  PASS  Testing descending real sort, ESMF_UtilUTest.F90, line 398
  PASS  Testing sorted descending real results, ESMF_UtilUTest.F90, line 412
  PASS  Testing sorted descending real results, ESMF_UtilUTest.F90, line 412
  PASS  Testing ascending double precision real sort, ESMF_UtilUTest.F90, line 4
  PASS  Testing ascending double precision real sort, ESMF_UtilUTest.F90, line 4
 23
  PASS  Testing sorted ascending double precision real results, ESMF_UtilUTest.F
 23
  PASS  Testing sorted ascending double precision real results, ESMF_UtilUTest.F
 90, line 437
  PASS  Testing descending double precision real sort, ESMF_UtilUTest.F90, line 
 90, line 437
  PASS  Testing descending double precision real sort, ESMF_UtilUTest.F90, line 
 446
  PASS  Testing sorted descending double precision real results, ESMF_UtilUTest.
 446
  PASS  Testing sorted descending double precision real results, ESMF_UtilUTest.
 F90, line 460
  PASS  Testing ascending integer sort, ESMF_UtilUTest.F90, line 471
 F90, line 460
  PASS  Testing ascending integer sort, ESMF_UtilUTest.F90, line 471
  PASS  Testing sorted ascending integer results, ESMF_UtilUTest.F90, line 486
  PASS  Testing sorted ascending integer results, ESMF_UtilUTest.F90, line 486
  PASS  Testing descending integer sort, ESMF_UtilUTest.F90, line 495
  PASS  Testing descending integer sort, ESMF_UtilUTest.F90, line 495
  PASS  Testing sorted descending integer results, ESMF_UtilUTest.F90, line 510
  PASS  Testing sorted descending integer results, ESMF_UtilUTest.F90, line 510
  PASS  Testing ascending double integer sort, ESMF_UtilUTest.F90, line 521
  PASS  Testing ascending double integer sort, ESMF_UtilUTest.F90, line 521
  PASS  Testing sorted ascending double integer results, ESMF_UtilUTest.F90, lin
  PASS  Testing sorted ascending double integer results, ESMF_UtilUTest.F90, lin
 e 536
  PASS  Testing descending double integer sort, ESMF_UtilUTest.F90, line 545
 e 536
  PASS  Testing descending double integer sort, ESMF_UtilUTest.F90, line 545
  PASS  Testing sorted descending double integer results, ESMF_UtilUTest.F90, li
  PASS  Testing sorted descending double integer results, ESMF_UtilUTest.F90, li
 ne 560
  PASS  Testing ascending character string sort, ESMF_UtilUTest.F90, line 571
 ne 560
  PASS  Testing ascending character string sort, ESMF_UtilUTest.F90, line 571
  PASS  Testing sorted ascending character string results, ESMF_UtilUTest.F90, l
  PASS  Testing sorted ascending character string results, ESMF_UtilUTest.F90, l
 ine 583
 ine 583
  PASS  Testing descending character string sort, ESMF_UtilUTest.F90, line 592
  PASS  Testing descending character string sort, ESMF_UtilUTest.F90, line 592
  PASS  Testing sorted descending character string results, ESMF_UtilUTest.F90, 
  PASS  Testing sorted descending character string results, ESMF_UtilUTest.F90, 
 line 604
 line 604
  PASS  Testing creating a directory, ESMF_UtilUTest.F90, line 618
  PASS  Testing creating a directory, ESMF_UtilUTest.F90, line 618
  PASS  Testing creating a directory which already exists, ESMF_UtilUTest.F90, l
 ine 626
  PASS  Testing creating a directory which already exists, ESMF_UtilUTest.F90, l
 ine 626
  PASS  Testing creating a directory which already exists w/relaxedFlag, ESMF_Ut
 ilUTest.F90, line 634
  PASS  Testing creating a directory which already exists w/relaxedFlag, ESMF_Ut
 ilUTest.F90, line 634
  PASS  Testing removing a directory, ESMF_UtilUTest.F90, line 642
  PASS  Testing removing a directory, ESMF_UtilUTest.F90, line 642
  PASS  Testing removing a directory which does not exist, ESMF_UtilUTest.F90, l
 ine 650
  PASS  Testing removing a directory which does not exist, ESMF_UtilUTest.F90, l
 ine 650
  PASS  Testing removing a directory which does not exist, relaxed, ESMF_UtilUTe
 st.F90, line 658
  PASS  Testing getting the current directory, ESMF_UtilUTest.F90, line 672
  PASS  Testing removing a directory which does not exist, relaxed, ESMF_UtilUTe
 st.F90, line 658
  PASS  Testing getting the current directory, ESMF_UtilUTest.F90, line 672
 current directory name =>
 current directory name =>
 /mnt/lfs4/HFIP/hfv3gfs/Mark.Potts/intel_2020.2_intelmpi_g_release_8.2.0/test/te
 stg/Linux.intel.64.intelmpi.default<
 /mnt/lfs4/HFIP/hfv3gfs/Mark.Potts/intel_2020.2_intelmpi_g_release_8.2.0/test/te
  PASS  Testing directory name for valid characters, ESMF_UtilUTest.F90, line 69
 stg/Linux.intel.64.intelmpi.default<
  PASS  Testing directory name for valid characters, ESMF_UtilUTest.F90, line 69
 1
 1
  PASS  Testing getting the current directory with small string, ESMF_UtilUTest.
  PASS  Testing getting the current directory with small string, ESMF_UtilUTest.
 F90, line 699
 F90, line 699
  PASS  Testing converting string to UPPER case, ESMF_UtilUTest.F90, line 711
  PASS  Testing converting string to UPPER case, ESMF_UtilUTest.F90, line 711
  PASS  Testing converting string to lower case, ESMF_UtilUTest.F90, line 721
  PASS  Testing converting string to lower case, ESMF_UtilUTest.F90, line 721
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 733
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 733
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 740
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 740
  PASS  ESMF_UtilStringInt2String() - Test, ESMF_UtilUTest.F90, line 749
  PASS  ESMF_UtilStringInt2String() - Test, ESMF_UtilUTest.F90, line 749
  PASS  String -> Integer -> String conversion correctness - Test, ESMF_UtilUTes
  PASS  String -> Integer -> String conversion correctness - Test, ESMF_UtilUTes
 t.F90, line 756
 t.F90, line 756
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
 764
 764
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
 771
 771
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
 90, line 779
 90, line 779
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
 90, line 786
 90, line 786
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
 794
 794
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
 801
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
 801
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
  809
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
  809
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
  816
  PASS  ESMF_UtilString2Int() - special string missing - Test, ESMF_UtilUTest.F9
  816
  PASS  ESMF_UtilString2Int() - special string missing - Test, ESMF_UtilUTest.F9
 0, line 826
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
 0, line 826
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
 836
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
 836
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
 843
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 856
 843
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 856
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 863
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 863
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
  871
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
  871
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
  878
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
  878
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
 F90, line 886
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
 F90, line 886
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
 F90, line 893
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
 F90, line 893
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  901
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  901
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  908
  PASS  ESMF_UtilString2Real() - trailing blanks - Test, ESMF_UtilUTest.F90, lin
  908
  PASS  ESMF_UtilString2Real() - trailing blanks - Test, ESMF_UtilUTest.F90, lin
 e 916
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
 e 916
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  923
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 93
  923
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 93
 6
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 94
 6
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 94
 3
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
 3
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
 ne 951
 ne 951
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
 ne 958
 ne 958
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
 t.F90, line 966
 t.F90, line 966
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
 t.F90, line 973
 t.F90, line 973
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 981
 ne 981
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 988
 ne 988
  PASS  ESMF_UtilString2Double() - trailing blanks - Test, ESMF_UtilUTest.F90, l
  PASS  ESMF_UtilString2Double() - trailing blanks - Test, ESMF_UtilUTest.F90, l
 ine 996
 ine 996
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 1003
 ne 1003
  PASS  Testing concatenating strings, ESMF_UtilUTest.F90, line 1016
  PASS  Testing concatenating strings, ESMF_UtilUTest.F90, line 1016
  PASS  Testing converting C string to Fortran string, ESMF_UtilUTest.F90, line 
  PASS  Testing converting C string to Fortran string, ESMF_UtilUTest.F90, line 
 1031
 1031
  PASS  Testing converting Fortran string to C string, ESMF_UtilUTest.F90, line 
  PASS  Testing converting Fortran string to C string, ESMF_UtilUTest.F90, line 
 1047
 1047
  Ending Test, file ESMF_UtilUTest.F90, line 1053
  Ending Test, file ESMF_UtilUTest.F90, line 1053
  PASS  Testing ESMF_UtilIOUnitGet, obtaining and opening units, ESMF_UtilUTest.
 F90, line 240
  PASS  Testing ESMF_UtilIOUnitGet, obtaining and opening units, ESMF_UtilUTest.
 F90, line 240
  PASS  Testing ESMF_UtilIOUnitFlush, get a free unit, ESMF_UtilUTest.F90, line 
 257
  PASS  Testing ESMF_UtilIOUnitFlush, get a free unit, ESMF_UtilUTest.F90, line 
 257
  PASS  ESMF_UtilIOUnitFlush, open scratch file: IOtempfile_00, ESMF_UtilUTest.F
 90, line 266
  PASS  ESMF_UtilIOUnitFlush, open scratch file: IOtempfile_01, ESMF_UtilUTest.F
 90, line 266
  PASS  ESMF_UtilIOUnitFlush, flush the scratch file, ESMF_UtilUTest.F90, line 2
 75
  PASS  Testing ESMF_UtilGetArgC, command line argument count, ESMF_UtilUTest.F9
 0, line 290
  PASS  Testing ESMF_UtilGetArgC, command line argument count value, ESMF_UtilUT
 est.F90, line 297
  PASS  Testing ESMF_UtilGetArgC, argindex < 0, ESMF_UtilUTest.F90, line 305
 command name = ./ESMF_UtilUTest
  PASS  Testing ESMF_UtilGetArgC, get command name, ESMF_UtilUTest.F90, line 314
  PASS  Testing ESMF_UtilGetArgC, get truncated command name, ESMF_UtilUTest.F90
 , line 322
 arg_len =          16 , len_trim (arg) =          16
  PASS  Testing ESMF_UtilGetArgC, compare arg lengths, ESMF_UtilUTest.F90, line 
 332
  PASS  Testing ESMF_UtilGetArgC, argindex > nargs, ESMF_UtilUTest.F90, line 342
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
 351
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
 360
  PASS  Testing ascending real sort, ESMF_UtilUTest.F90, line 375
  PASS  Testing sorted ascending real results, ESMF_UtilUTest.F90, line 389
  PASS  Testing descending real sort, ESMF_UtilUTest.F90, line 398
  PASS  Testing sorted descending real results, ESMF_UtilUTest.F90, line 412
  PASS  Testing ascending double precision real sort, ESMF_UtilUTest.F90, line 4
 23
  PASS  Testing sorted ascending double precision real results, ESMF_UtilUTest.F
 90, line 437
  PASS  Testing descending double precision real sort, ESMF_UtilUTest.F90, line 
 446
  PASS  Testing sorted descending double precision real results, ESMF_UtilUTest.
 F90, line 460
  PASS  Testing ascending integer sort, ESMF_UtilUTest.F90, line 471
  PASS  Testing sorted ascending integer results, ESMF_UtilUTest.F90, line 486
  PASS  Testing descending integer sort, ESMF_UtilUTest.F90, line 495
  PASS  Testing sorted descending integer results, ESMF_UtilUTest.F90, line 510
  PASS  Testing ascending double integer sort, ESMF_UtilUTest.F90, line 521
  PASS  Testing sorted ascending double integer results, ESMF_UtilUTest.F90, lin
 e 536
  PASS  Testing descending double integer sort, ESMF_UtilUTest.F90, line 545
  PASS  Testing sorted descending double integer results, ESMF_UtilUTest.F90, li
 ne 560
  PASS  Testing ascending character string sort, ESMF_UtilUTest.F90, line 571
  PASS  Testing sorted ascending character string results, ESMF_UtilUTest.F90, l
 ine 583
  PASS  Testing descending character string sort, ESMF_UtilUTest.F90, line 592
  PASS  Testing sorted descending character string results, ESMF_UtilUTest.F90, 
 line 604
  PASS  Testing creating a directory, ESMF_UtilUTest.F90, line 618
  PASS  Testing creating a directory which already exists, ESMF_UtilUTest.F90, l
 ine 626
  PASS  Testing creating a directory which already exists w/relaxedFlag, ESMF_Ut
 ilUTest.F90, line 634
  PASS  ESMF_UtilIOUnitFlush, flush the scratch file, ESMF_UtilUTest.F90, line 2
 75
  PASS  Testing removing a directory, ESMF_UtilUTest.F90, line 642
  PASS  Testing removing a directory which does not exist, ESMF_UtilUTest.F90, l
 ine 650
  PASS  Testing removing a directory which does not exist, relaxed, ESMF_UtilUTe
 st.F90, line 658
  PASS  Testing getting the current directory, ESMF_UtilUTest.F90, line 672
 current directory name =>
 /mnt/lfs4/HFIP/hfv3gfs/Mark.Potts/intel_2020.2_intelmpi_g_release_8.2.0/test/te
 stg/Linux.intel.64.intelmpi.default<
  PASS  Testing directory name for valid characters, ESMF_UtilUTest.F90, line 69
 1
  PASS  Testing getting the current directory with small string, ESMF_UtilUTest.
 F90, line 699
  PASS  Testing converting string to UPPER case, ESMF_UtilUTest.F90, line 711
  PASS  Testing converting string to lower case, ESMF_UtilUTest.F90, line 721
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 733
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 740
  PASS  ESMF_UtilStringInt2String() - Test, ESMF_UtilUTest.F90, line 749
  PASS  String -> Integer -> String conversion correctness - Test, ESMF_UtilUTes
 t.F90, line 756
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
 764
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
 771
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
 90, line 779
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
 90, line 786
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
 794
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
 801
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
  809
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
  816
  PASS  ESMF_UtilString2Int() - special string missing - Test, ESMF_UtilUTest.F9
 0, line 826
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
 836
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
 843
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 856
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 863
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
  871
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
  878
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
 F90, line 886
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
 F90, line 893
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  901
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  908
  PASS  ESMF_UtilString2Real() - trailing blanks - Test, ESMF_UtilUTest.F90, lin
 e 916
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  923
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 93
 6
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 94
 3
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
 ne 951
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
 ne 958
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
 t.F90, line 966
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
 t.F90, line 973
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 981
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 988
  PASS  ESMF_UtilString2Double() - trailing blanks - Test, ESMF_UtilUTest.F90, l
 ine 996
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 1003
  PASS  Testing concatenating strings, ESMF_UtilUTest.F90, line 1016
  PASS  Testing converting C string to Fortran string, ESMF_UtilUTest.F90, line 
 1031
  PASS  Testing converting Fortran string to C string, ESMF_UtilUTest.F90, line 
 1047
  Ending Test, file ESMF_UtilUTest.F90, line 1053
  PASS  Testing ESMF_UtilGetArgC, command line argument count, ESMF_UtilUTest.F9
 0, line 290
  PASS  Testing ESMF_UtilGetArgC, command line argument count value, ESMF_UtilUT
 est.F90, line 297
  PASS  Testing ESMF_UtilGetArgC, argindex < 0, ESMF_UtilUTest.F90, line 305
 command name = ./ESMF_UtilUTest
  PASS  Testing ESMF_UtilGetArgC, get command name, ESMF_UtilUTest.F90, line 314
  PASS  Testing ESMF_UtilGetArgC, get truncated command name, ESMF_UtilUTest.F90
 , line 322
 arg_len =          16 , len_trim (arg) =          16
  PASS  Testing ESMF_UtilGetArgC, compare arg lengths, ESMF_UtilUTest.F90, line 
 332
  PASS  Testing ESMF_UtilGetArgC, argindex > nargs, ESMF_UtilUTest.F90, line 342
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
 351
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
 360
  PASS  Testing ascending real sort, ESMF_UtilUTest.F90, line 375
  PASS  Testing sorted ascending real results, ESMF_UtilUTest.F90, line 389
  PASS  Testing descending real sort, ESMF_UtilUTest.F90, line 398
  PASS  Testing sorted descending real results, ESMF_UtilUTest.F90, line 412
  PASS  Testing ascending double precision real sort, ESMF_UtilUTest.F90, line 4
 23
  PASS  Testing sorted ascending double precision real results, ESMF_UtilUTest.F
 90, line 437
  PASS  Testing descending double precision real sort, ESMF_UtilUTest.F90, line 
 446
  PASS  Testing sorted descending double precision real results, ESMF_UtilUTest.
 F90, line 460
  PASS  Testing ascending integer sort, ESMF_UtilUTest.F90, line 471
  PASS  Testing sorted ascending integer results, ESMF_UtilUTest.F90, line 486
  PASS  Testing descending integer sort, ESMF_UtilUTest.F90, line 495
  PASS  Testing sorted descending integer results, ESMF_UtilUTest.F90, line 510
  PASS  Testing ascending double integer sort, ESMF_UtilUTest.F90, line 521
  PASS  Testing sorted ascending double integer results, ESMF_UtilUTest.F90, lin
 e 536
  PASS  Testing descending double integer sort, ESMF_UtilUTest.F90, line 545
  PASS  Testing sorted descending double integer results, ESMF_UtilUTest.F90, li
 ne 560
  PASS  Testing ascending character string sort, ESMF_UtilUTest.F90, line 571
  PASS  Testing sorted ascending character string results, ESMF_UtilUTest.F90, l
 ine 583
  PASS  Testing descending character string sort, ESMF_UtilUTest.F90, line 592
  PASS  Testing sorted descending character string results, ESMF_UtilUTest.F90, 
 line 604
  PASS  Testing creating a directory, ESMF_UtilUTest.F90, line 618
  PASS  Testing creating a directory which already exists, ESMF_UtilUTest.F90, l
 ine 626
  PASS  Testing creating a directory which already exists w/relaxedFlag, ESMF_Ut
 ilUTest.F90, line 634
  PASS  Testing removing a directory, ESMF_UtilUTest.F90, line 642
  PASS  Testing removing a directory which does not exist, ESMF_UtilUTest.F90, l
 ine 650
  PASS  Testing removing a directory which does not exist, relaxed, ESMF_UtilUTe
 st.F90, line 658
  PASS  Testing getting the current directory, ESMF_UtilUTest.F90, line 672
 current directory name =>
 /mnt/lfs4/HFIP/hfv3gfs/Mark.Potts/intel_2020.2_intelmpi_g_release_8.2.0/test/te
 stg/Linux.intel.64.intelmpi.default<
  PASS  Testing directory name for valid characters, ESMF_UtilUTest.F90, line 69
 1
  PASS  Testing getting the current directory with small string, ESMF_UtilUTest.
 F90, line 699
  PASS  Testing converting string to UPPER case, ESMF_UtilUTest.F90, line 711
  PASS  Testing converting string to lower case, ESMF_UtilUTest.F90, line 721
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 733
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 740
  PASS  ESMF_UtilStringInt2String() - Test, ESMF_UtilUTest.F90, line 749
  PASS  String -> Integer -> String conversion correctness - Test, ESMF_UtilUTes
 t.F90, line 756
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
 764
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
 771
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
 90, line 779
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
 90, line 786
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
 794
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
 801
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
  809
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
  816
  PASS  ESMF_UtilString2Int() - special string missing - Test, ESMF_UtilUTest.F9
 0, line 826
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
 836
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
 843
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 856
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 863
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
  871
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
  878
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
 F90, line 886
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
 F90, line 893
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  901
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  908
  PASS  ESMF_UtilString2Real() - trailing blanks - Test, ESMF_UtilUTest.F90, lin
 e 916
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  923
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 93
 6
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 94
 3
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
 ne 951
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
 ne 958
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
 t.F90, line 966
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
 t.F90, line 973
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 981
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 988
  PASS  ESMF_UtilString2Double() - trailing blanks - Test, ESMF_UtilUTest.F90, l
 ine 996
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 1003
  PASS  Testing concatenating strings, ESMF_UtilUTest.F90, line 1016
  PASS  Testing converting C string to Fortran string, ESMF_UtilUTest.F90, line 
 1031
  PASS  Testing converting Fortran string to C string, ESMF_UtilUTest.F90, line 
 1047
  Ending Test, file ESMF_UtilUTest.F90, line 1053
  PET           0  Test Elapsed Time    11.4550000000000       msec.
  PET           3  Test Elapsed Time    47.7520000000000       msec.
  PET           2  Test Elapsed Time    47.7730000000000       msec.
  PET           1  Test Elapsed Time    16.3560000000000       msec.
