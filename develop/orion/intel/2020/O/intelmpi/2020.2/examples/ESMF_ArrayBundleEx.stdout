build time -- 2022-01-26 02:36:55
MPI startup(): Warning: I_MPI_PMI_LIBRARY will be ignored since the hydra process manager was found
MPI startup(): Warning: I_MPI_PMI_LIBRARY will be ignored since the hydra process manager was found
MPI startup(): Warning: I_MPI_PMI_LIBRARY will be ignored since the hydra process manager was found
MPI startup(): Warning: I_MPI_PMI_LIBRARY will be ignored since the hydra process manager was found
--- ESMCI::ArrayBundle::print start ---
ArrayBundle: MyArrayBundle
arrayCount = 3
--- ESMCI::ArrayBundle::print start ---Container::print() multipmap:item=0 key=AonFly value=0x29af560
Container::print() multipmap:item=1 key=Array002 value=0x29ab460
Container::print() multipmap:item=2 key=Array003 value=0x29ac220
Container::print()      list:item=0 key=Array002 value=0x29ab460
Container::print()      list:item=1 key=Array003 value=0x29ac220
Container::print()      list:item=2 key=AonFly value=0x29af560
--- ESMCI::ArrayBundle::print end ---

--- ESMCI::Array::print start ---ArrayBundle: MyArrayBundle
arrayCount = 3
Container::print() multipmap:item=0 key=AonFly value=0x10f1460
Container::print() multipmap:item=1 key=Array002 value=0x10ed360
Container::print() multipmap:item=2 key=Array003 value=0x10ee120
Container::print()      list:item=0 key=Array002 value=0x10ed360
Container::print()      list:item=1 key=Array003 value=0x10ee120
Container::print()      list:item=2 key=AonFly value=0x10f1460
--- ESMCI::ArrayBundle::print end ---
--- ESMCI::Array::print start ---
 Base name    = AonFly
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}--- ESMCI::ArrayBundle::print start ---Array typekind/rank: Real*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 6
localDeCount = 2
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x10f0e00:
            rank = 2, typekind = 5, base_addr = 0x7fe7bc3cfee0
            dim[0] = 2  dim[1] = 2  
  Real, *4, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 2] 2] 2]
~ local data in LocalArray for DE 5 ~
LocalArrayPrint: Array at address 0x10f1130:
            rank = 2, typekind = 5, base_addr = 0x7fe7bc3cfec0
            dim[0] = 2  dim[1] = 1  
  Real, *4, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 1] 1] 1]
--- ESMCI::Array::print end ---
--- ESMCI::Array::print start ---
 Base name    = Array002
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 6
localDeCount = 2
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x10ecd00:
            rank = 2, typekind = 6, base_addr = 0x7fe7bc3cffc0
            dim[0] = 2  dim[1] = 2  
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 2] 2] 2]
~ local data in LocalArray for DE 5 ~
LocalArrayPrint: Array at address 0x10ed030:
            rank = 2, typekind = 6, base_addr = 0x7fe7bc3cffa0
            dim[0] = 2  dim[1] = 1  
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 1] 1] 1]
--- ESMCI::Array::print end ---
--- ESMCI::Array::print start ---
 Base name    = Array003
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 6
localDeCount = 2
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x10edac0:
            rank = 2, typekind = 6, base_addr = 0x7fe7bc3cff80
            dim[0] = 2  dim[1] = 2  
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 2] 2] 2]
~ local data in LocalArray for DE 5 ~
LocalArrayPrint: Array at address 0x10eddf0:
            rank = 2, typekind = 6, base_addr = 0x7fe7bc3cff60
            dim[0] = 2  dim[1] = 1  
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 1] 1] 1]
--- ESMCI::Array::print end ---

 Base name    = AonFly
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 6
--- ESMCI::ArrayBundle::print start ---
ArrayBundle: MyArrayBundle
arrayCount = 3
Container::print() multipmap:item=0 key=AonFly value=0x169c220
Container::print() multipmap:item=1 key=Array002 value=0x1698ea0
Container::print() multipmap:item=2 key=Array003 value=0x1699930
Container::print()      list:item=0 key=Array002 value=0x1698ea0
Container::print()      list:item=1 key=Array003 value=0x1699930
Container::print()      list:item=2 key=AonFly value=0x169c220
--- ESMCI::ArrayBundle::print end ---
localDeCount = 2
--- ESMCI::Array::print start ---
 Base name    = AonFly
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
~ local data in LocalArray for DE 0 ~
{}Array typekind/rank: Real*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x169bef0:
            rank = 2, typekind = 5, base_addr = 0x7fae73d8ff60
            dim[0] = 2  dim[1] = 2  
  Real, *4, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 2] 2] 2]
--- ESMCI::Array::print end ---
--- ESMCI::Array::print start ---
 Base name    = Array002
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x1698b70:
            rank = 2, typekind = 6, base_addr = 0x7fae73d8ffc0
            dim[0] = 2  dim[1] = 2  
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 2] 2] 2]
--- ESMCI::Array::print end ---
--- ESMCI::Array::print start ---
 Base name    = Array003
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x1699600:
            rank = 2, typekind = 6, base_addr = 0x7fae73d8ffa0
            dim[0] = 2  dim[1] = 2  
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 2] 2] 2]
--- ESMCI::Array::print end ---
LocalArrayPrint: Array at address 0x29aef00:
            rank = 2, typekind = 5, base_addr = 0x7efca311bf40
              PASS  Example ESMF_ArrayBundleEx, ESMF_ArrayBundleEx.F90, line 267
dim[0] = 3  
dim[1] = 2  ArrayBundle: MyArrayBundle

  Real, *4, Dim 2, Data values:
arrayCount = 3
( 1, 1) =  0
Container::print() multipmap:item=( 2, 1) =  0
0( 3, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
 key=( 3, 2) =  0
AonFlydim 1: [0]: [1 [1 [1, 3] 3] 3]
 value=0x1c1a2c0dim 2: [1]: [1 [1 [1, 2] 2] 2]
~ local data in LocalArray for DE 4 ~
LocalArrayPrint: Array at address 0x29af230:

            rank = 2, typekind = 5, Container::print() multipmap:item=base_addr = 0x7efca311bf20
1             key=dim[0] = 3  Array002dim[1] = 1   value=
0x1c16f40  Real, *4, Dim 2, Data values:

( 1, 1) =  0
Container::print() multipmap:item=2( 2, 1) =  0
 key=( 3, 1) =  0
Array003dim 1: [0]: [1 [1 [1, 3] 3] 3]
 value=dim 2: [1]: [1 [1 [1, 1] 1] 1]
0x1c179d0--- ESMCI::Array::print end ---

Container::print()      list:item=--- ESMCI::Array::print start ---0 key=Array002
 Base name    =  value=0x1c16f40Array002

Container::print()      list:item= Status: Base = 1Ready key=, Array003 object =  value=Ready0x1c179d0

 Proxy        = Container::print()      list:item=no2
 key= Root Info (Attributes):AonFly
 value={}0x1c1a2c0
--- ESMCI::ArrayBundle::print end ---Array typekind/rank: Real*8 / 2 

--- ESMCI::Array::print start ---~ lower class' values ~
DistGrid dimCount = 2
deCount = 6
localDeCount = 2
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x29aae00:
            rank = 2, typekind = 6, base_addr = 0x7efca3133d40
            
 Base name    = dim[0] = 3  AonFlydim[1] = 2  

  Real, *8, Dim 2, Data values:
 Status: Base = ( 1, 1) =  6.89832e-310
Ready( 2, 1) =  6.01347e-154
,  object = ( 3, 1) =  6.01347e-154
Ready( 1, 2) =  6.10916e+223

 Proxy        = ( 2, 2) =  7.88786e+73
no
( 3, 2) =  6.06757e-154
 Root Info (Attributes):dim 1: [0]: [1 [1 [1, 3] 3] 3]

dim 2: [1]: [1 [1 [1, 2] 2] 2]
{}~ local data in LocalArray for DE 4 ~
LocalArrayPrint: Array at address 0x29ab130:
            rank = 2, typekind = 6, base_addr = 0x7efca311bfc0
            dim[0] = 3  dim[1] = 1  
  Real, *8, Dim 2, Data values:
Array typekind/rank: Real*4 / 2 
( 1, 1) =  0
( 2, 1) =  0
( 3, 1) =  0
dim 1: [0]: [1 [1 [1, 3] 3] 3]
~ lower class' values ~
dim 2: [1]: [1 [1 [1, 1] 1] 1]
DistGrid dimCount = 2
--- ESMCI::Array::print end ---deCount = 6

localDeCount = 1
--- ESMCI::Array::print start ---~ local data in LocalArray for DE 2 ~

LocalArrayPrint: Array at address 0x1c19f90:
 Base name    =             rank = 2, typekind = 5, Array003
base_addr = 0x7fbe70a17fc0
 Status: Base =             Readydim[0] = 3  , dim[1] = 2   object = 
Ready  Real, *4, Dim 2, Data values:

 Proxy        = ( 1, 1) =  0
no
( 2, 1) =  0
 Root Info (Attributes):
( 3, 1) =  7.10718e-38
{}( 1, 2) =  0
( 2, 2) =  0
Array typekind/rank: Real*8 / 2 
( 3, 2) =  0
~ lower class' values ~
dim 1: [0]: [1 [1 [1, 3] 3] 3]
DistGrid dimCount = 2
deCount = 6
dim 2: [1]: [1 [1 [1, 2] 2] 2]
localDeCount = 2
--- ESMCI::Array::print end ---~ local data in LocalArray for DE 0 ~

--- ESMCI::Array::print start ---LocalArrayPrint: Array at address 0x29abbc0:
            rank = 2, typekind = 6, 
base_addr = 0x7efca3133d00
 Base name    = Array002            
dim[0] = 3   Status: Base = dim[1] = 2  Ready
,   Real, *8, Dim 2, Data values:
 object = ( 1, 1) =  6.89832e-310
Ready
( 2, 1) =  6.01347e-154
 Proxy        = ( 3, 1) =  6.01347e-154
no( 1, 2) =  6.10916e+223

 Root Info (Attributes):( 2, 2) =  6.01386e-154

( 3, 2) =  6.01347e-154
{}dim 1: [0]: [1 [1 [1, 3] 3] 3]
Array typekind/rank: Real*8 / 2 
dim 2: [1]: [1 [1 [1, 2] 2] 2]
~ lower class' values ~~ local data in LocalArray for DE 4 ~

LocalArrayPrint: Array at address 0x29abef0:
DistGrid dimCount = 2
            rank = 2, typekind = 6, deCount = 6
base_addr = 0x7efca311bfa0
localDeCount = 1
            ~ local data in LocalArray for DE 2 ~
dim[0] = 3  LocalArrayPrint: Array at address 0x1c16c10:
dim[1] = 1              rank = 2, typekind = 6, 
base_addr = 0x7fbe70a2fd40
  Real, *8, Dim 2, Data values:
            ( 1, 1) =  0
dim[0] = 3  ( 2, 1) =  0
dim[1] = 2  ( 3, 1) =  0

  Real, *8, Dim 2, Data values:
dim 1: [0]: [1 [1 [1, 3] 3] 3]
( 1, 1) =  6.93944e-310
dim 2: [1]: [1 [1 [1, 1] 1] 1]
--- ESMCI::Array::print end ---( 2, 1) =  6.01347e-154

( 3, 1) =  6.01347e-154
( 1, 2) =  6.10916e+223
( 2, 2) =  7.88786e+73
( 3, 2) =  6.06757e-154
dim 1: [0]: [1 [1 [1, 3] 3] 3]
dim 2: [1]: [1 [1 [1, 2] 2] 2]
--- ESMCI::Array::print end ---
--- ESMCI::Array::print start ---
 Base name    = Array003
 Status: Base = Ready,  object = Ready  PASS  Example ESMF_ArrayBundleEx, ESMF_ArrayBundleEx.F90, line 267

 Proxy        = no
  PASS  Example ESMF_ArrayBundleEx, ESMF_ArrayBundleEx.F90, line 267
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x1c176a0:
            rank = 2, typekind = 6, base_addr = 0x7fbe70a2fd00
            dim[0] = 3  dim[1] = 2  
  Real, *8, Dim 2, Data values:
( 1, 1) =  6.93944e-310
( 2, 1) =  6.01347e-154
( 3, 1) =  6.01347e-154
( 1, 2) =  6.10916e+223
( 2, 2) =  6.01386e-154
( 3, 2) =  6.01347e-154
dim 1: [0]: [1 [1 [1, 3] 3] 3]
dim 2: [1]: [1 [1 [1, 2] 2] 2]
--- ESMCI::Array::print end ---
  PASS  Example ESMF_ArrayBundleEx, ESMF_ArrayBundleEx.F90, line 267
 PASS: ESMF_ArrayBundleEx.F90
 PASS: ESMF_ArrayBundleEx.F90
 PASS: ESMF_ArrayBundleEx.F90
 PASS: ESMF_ArrayBundleEx.F90
