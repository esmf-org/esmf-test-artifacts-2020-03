build time -- 2021-11-04 04:01:39
 --------------------------------------- 
 Start of  System Test ESMF_CompFortranAndC
 --------------------------------------- 
 Start of  System Test ESMF_CompFortranAndC
 --------------------------------------- 
 --------------------------------------- 
 --------------------------------------- 
 Start of  System Test ESMF_CompFortranAndC
 --------------------------------------- 
 --------------------------------------- 
 Start of  System Test ESMF_CompFortranAndC
 --------------------------------------- 
 --------------------------------------- 
 Start of  System Test ESMF_CompFortranAndC
 --------------------------------------- 
 --------------------------------------- 
 Start of  System Test ESMF_CompFortranAndC
 --------------------------------------- 
 Comp Create (Fortran) finished, name = Fortran Component
 Comp Create (Fortran) finished, name = Fortran Component
 Comp Create (Fortran) finished, name = Fortran Component
 Comp Create (Fortran) finished, name = Fortran Component
 Comp Create (Fortran) finished, name = Fortran Component
 Comp Create (Fortran) finished, name = Fortran Component
 Comp Create (C) finished, name = C Component
 Comp Create (C) finished, name = C Component
 Comp Create (C) finished, name = C Component
 Comp Create (C) finished, name = C Component
 Comp Create (C) finished, name = C Component
 Comp Create (C) finished, name = C Component
 In mySetVMInFortran routine
 In mySetVMInFortran routine
 In mySetVMInFortran routine
 In mySetVMInFortran routine
 In mySetVMInFortran routine
 In mySetVMInFortran routine
 CompInFortran SetVM finished, rc=            0           0
 CompInFortran SetVM finished, rc=            0           0
 CompInFortran SetVM finished, rc=            0           0
 CompInFortran SetVM finished, rc=            0           0
 CompInFortran SetVM finished, rc=            0           0
 CompInFortran SetVM finished, rc=            0           0
 In mySetServicesInFortran routine
 In mySetServicesInFortran routine
 In mySetServicesInFortran routine
 In mySetServicesInFortran routine
 CompInFortran SetServices finished, rc=            0           0
 CompInFortran SetServices finished, rc=            0           0
 In mySetServicesInFortran routine
 CompInFortran SetServices finished, rc=            0           0
 In mySetServicesInFortran routine
 CompInFortran SetServices finished, rc=            0           0
 CompInFortran SetServices finished, rc=            0           0
 CompInFortran SetServices finished, rc=            0           0
In mySetServicesInC()
 Gridded Component:
In mySetServicesInC()
 Gridded Component:
In mySetServicesInC()
 Gridded Component:
  Component name = C Component
In mySetServicesInC()
 Gridded Component:
  Component name = C Component
 CompInC SetServices finished, rc=            0           0
In mySetServicesInC()
 Gridded Component:
  Component name = C Component
 CompInC SetServices finished, rc=            0           0
In mySetServicesInC()
 Gridded Component:
  Component name = C Component
 CompInC SetServices finished, rc=            0           0
  Component name = C Component
 CompInC SetServices finished, rc=            0           0
  Component name = C Component
 CompInC SetServices finished, rc=            0           0
 Time Interval set
 Time Interval set
 CompInC SetServices finished, rc=            0           0
 Time Interval set
 Time Interval set
 Start Time set
 Stop Time set
 Time Interval set
 Time Interval set
 Start Time set
 Stop Time set
 Start Time set
 Stop Time set
 Start Time set
 Stop Time set
 Start Time set
 Stop Time set
 Start Time set
 Stop Time set
 Clock created
 Clock created
 Clock created
 Clock created
 Clock created
 Clock created
 In myInitInFortran routine
 Gridded Component:
  Component name = Fortran Component
 In myInitInFortran routine
 Gridded Component:
  Component name = Fortran Component
 In myInitInFortran routine
 Gridded Component:
  Component name = Fortran Component
 In myInitInFortran routine
 Gridded Component:
  Component name = Fortran Component
 In myInitInFortran routine
 Gridded Component:
  Component name = Fortran Component
 In myInitInFortran routine
 Gridded Component:
  Component name = Fortran Component
 ESMF_StatePrint: (pet 2):
  State name: igrid export state
 ESMF_StatePrint: (pet 0):
  State name: igrid export state
 ESMF_StatePrint: (pet 4):
  State name: igrid export state
 ESMF_StatePrint: (pet 5):
  State name: igrid export state
 ESMF_StatePrint: (pet 3):
  State name: igrid export state
 ESMF_StatePrint: (pet 1):
  State name: igrid export state
     status: Export State, object count: 0
     status: Export State, object count: 0
     status: Export State, object count: 0
     status: Export State, object count: 0
     status: Export State, object count: 0
     reconcile needed: F
     status: Export State, object count: 0
     reconcile needed: F
     reconcile needed: F
     reconcile needed: F
     reconcile needed: F
     reconcile needed: F
 Base name    = igrid export state
 Base name    = igrid export state
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Base name    = igrid export state
 Base name    = igrid export state
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Proxy        = no
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}{}{}{}{}{} ESMF_StatePrint: (pet 2):
  State name: igrid export state
 ESMF_StatePrint: (pet 3):
  State name: igrid export state
 ESMF_StatePrint: (pet 4):
  State name: igrid export state
 ESMF_StatePrint: (pet 5):
  State name: igrid export state
 ESMF_StatePrint: (pet 1):
  State name: igrid export state
 ESMF_StatePrint: (pet 0):
  State name: igrid export state
     status: Export State, object count: 1
     reconcile needed: T
 Base name    = igrid export state
     status: Export State, object count: 1
     reconcile needed: T
 Base name    = igrid export state
     status: Export State, object count: 1
     reconcile needed: T
 Base name    = igrid export state
     status: Export State, object count: 1
     reconcile needed: T
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
     status: Export State, object count: 1
     reconcile needed: T
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
     status: Export State, object count: 1
     reconcile needed: T
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Root Info (Attributes):
{}     object: 1,name: array1
{}     object: 1,name: array1
{}     object: 1,name: array1
{}     object: 1,name: array1
            type: Array
{}     object: 1,name: array1
            type: Array
{}     object: 1,name: array1
            type: Array
            type: Array
 CompInFortran Initialize returned, rc=           0           0
In myInitInC()
            type: Array
            type: Array
 CompInFortran Initialize returned, rc=           0           0
In myInitInC()
 CompInFortran Initialize returned, rc=           0           0
In myInitInC()
 CompInFortran Initialize returned, rc=           0           0
 CompInFortran Initialize returned, rc=           0           0
local ptr[0] = 1
local ptr[1] = 2
local ptr[0] = 1
local ptr[1] = 2
local ptr[0] = 0
local ptr[0] = 1
local ptr[1] = 2
local ptr[0] = 0
local ptr[0] = 0
 CompInFortran Initialize returned, rc=           0           0
In myInitInC()
In myInitInC()
In myInitInC()
local ptr[0] = 1
local ptr[0] = 1
local ptr[0] = 1
local ptr[1] = 2
local ptr[1] = 2
local ptr[0] = 0
local ptr[0] = 0
local ptr[1] = 2
local ptr[0] = 0
 CompInC Initialize returned, rc=           0           0
 In myRunInFortran routine
 CompInC Initialize returned, rc=           0           0
 CompInC Initialize returned, rc=           0           0
 CompInC Initialize returned, rc=           0           0
 In myRunInFortran routine
 CompInC Initialize returned, rc=           0           0
 In myRunInFortran routine
 In myRunInFortran routine
 In Fortran Component Run, farray=    0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000     
 CompInC Initialize returned, rc=           0           0
 In myRunInFortran routine
 In Fortran Component Run, farray=    0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000     
 In Fortran Component Run, farray=    0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000     
 In Fortran Component Run, farray=    0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000     
 Field Print Starts ====>
 In myRunInFortran routine
 In Fortran Component Run, farray=    0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000     
 Field base status = Ready
   Name = 'Field from C'
 In Fortran Component Run, farray=    0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000     
 Field Print Starts ====>
 Field base status = Ready
 Field Print Starts ====>
 Field base status = Ready
   Name = 'Field from C'
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Field Print Starts ====>
 Field base status = Ready
   Name = 'Field from C'
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Field Print Starts ====>
 Field base status = Ready
   Name = 'Field from C'
 Base name    = Field from C
 Field Print Starts ====>
 Field base status = Ready
   Name = 'Field from C'
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Root Info (Attributes):
{} Field status =            4
{} Field status =            4
 gridrank =            1
   Name = 'Field from C'
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}{} Field status =            4
 gridrank =            1
 Field status =            4
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{} Field status =            4
{} Field status =            4
 gridrank =            1
 gridrank =            1
--- ESMCI::Array::print start ---
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
--- ESMCI::Array::print start ---
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}--- ESMCI::Array::print start ---
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 0 ~
 gridrank =            1
--- ESMCI::Array::print start ---
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 gridrank =            1
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Integer*4 / 3 
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 4 ~
LocalArrayPrint: Array at address 0x2650d90:
            rank = 3, typekind = 3, base_addr = 0x2634c30
Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0xc64970:
            rank = 3, typekind = 3, base_addr = 0xc522f0
            dim[0] = 275  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
            dim[0] = 602  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
( 1, 1, 1) =  -1122599192
( 2, 1, 1) =  10972
( 3, 1, 1) =  -1122599192
( 4, 1, 1) =  10972
( 5, 1, 1) =  40061984
( 6, 1, 1) =  0
( 7, 1, 1) =  40061984
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
  skipping to end ...
LocalArrayPrint: Array at address 0xbc1f90:
            rank = 3, typekind = 3, base_addr = 0xbc3db0
            dim[0] = 372  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
( 1, 1, 1) =  -1513734472
( 2, 1, 1) =  10946
( 3, 1, 1) =  -1513734472
( 4, 1, 1) =  10946
( 5, 1, 1) =  12336544
( 6, 1, 1) =  0
( 7, 1, 1) =  12336544
( 8, 1, 1) =  0
( 9, 1, 1) =  1514302389
(10, 1, 1) =  -1077030813
  skipping to end ...
(363, 2, 3) =  73
(364, 2, 3) =  94
(365, 2, 3) =  75
(366, 2, 3) =  51
(367, 2, 3) =  76
{}Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 5 ~
LocalArrayPrint: Array at address 0x1c5b7a0:
            rank = 3, typekind = 3, base_addr = 0x1c3f2a0
            dim[0] = 570  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
( 1, 1, 1) =  -1587106056
( 2, 1, 1) =  11168
( 3, 1, 1) =  -1587106056
( 4, 1, 1) =  11168
( 5, 1, 1) =  29618832
( 6, 1, 1) =  0
( 7, 1, 1) =  29618832
( 8, 1, 1) =  0
( 9, 1, 1) =  278
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x1b84fd0:
            rank = 3, typekind = 3, base_addr = 0x1b86d70
            dim[0] = 307  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
( 1, 1, 1) =  -749355336
( 2, 1, 1) =  11002
( 3, 1, 1) =  -749355336
( 4, 1, 1) =  11002
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x10f8510:
            rank = 3, typekind = 3, base_addr = 0x10e7050
            dim[0] = 349  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
( 1, 1, 1) =  476573368
( 2, 1, 1) =  11081
( 3, 1, 1) =  476573368
( 4, 1, 1) =  11081
( 5, 1, 1) =  17723456
( 6, 1, 1) =  0
( 7, 1, 1) =  17723456
( 8, 1, 1) =  0
( 9, 1, 1) =  -125344326
(10, 1, 1) =  1070017927
( 1, 1, 1) =  1315122888
( 2, 1, 1) =  10983
( 3, 1, 1) =  1315122888
( 4, 1, 1) =  10983
( 5, 1, 1) =  12919520
( 6, 1, 1) =  0
( 7, 1, 1) =  12919520
( 8, 1, 1) =  0
( 9, 1, 1) =  346
(10, 1, 1) =  1522
  skipping to end ...
(266, 2, 3) =  1382
(267, 2, 3) =  1383
(268, 2, 3) =  1384
(269, 2, 3) =  1385
(270, 2, 3) =  1386
(271, 2, 3) =  1387
(272, 2, 3) =  1389
(273, 2, 3) =  1390
(274, 2, 3) =  1391
(275, 2, 3) =  1393
  skipping to end ...
(340, 2, 3) =  75
(341, 2, 3) =  76
(342, 2, 3) =  106
(343, 2, 3) =  76
(344, 2, 3) =  51
(345, 2, 3) =  77
(346, 2, 3) =  76
(593, 2, 3) =  4
(594, 2, 3) =  4
(595, 2, 3) =  4
(596, 2, 3) =  4
(597, 2, 3) =  4
(598, 2, 3) =  4
(599, 2, 3) =  4
(600, 2, 3) =  4
(601, 2, 3) =  4
(602, 2, 3) =  4
dim 1: [0]: [1 [1 [1, 602] 602] 602]
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
(368, 2, 3) =  77
(369, 2, 3) =  54
(370, 2, 3) =  78
(371, 2, 3) =  77
(372, 2, 3) =  78
dim 1: [0]: [1 [1 [1, 372] 372] 372]
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
(10, 1, 1) =  3022
  skipping to end ...
(561, 2, 3) =  0
(562, 2, 3) =  0
(563, 2, 3) =  -968394866
(564, 2, 3) =  1070658410
(565, 2, 3) =  1195718895
(566, 2, 3) =  -1076496014
(567, 2, 3) =  0
(568, 2, 3) =  0
(569, 2, 3) =  -1231178145
(570, 2, 3) =  1070400582
dim 1: [0]: [1 [1 [1, 570] 570] 570]
( 5, 1, 1) =  28863840
( 6, 1, 1) =  0
( 7, 1, 1) =  28863840
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
  skipping to end ...
(298, 2, 3) =  3
(299, 2, 3) =  3
(300, 2, 3) =  3
(301, 2, 3) =  3
(302, 2, 3) =  3
dim 1: [0]: [1 [1 [1, 275] 275] 275]
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
(303, 2, 3) =  3
(304, 2, 3) =  3
(305, 2, 3) =  3
(306, 2, 3) =  3
(307, 2, 3) =  3
dim 1: [0]: [1 [1 [1, 307] 307] 307]
(347, 2, 3) =  77
(348, 2, 3) =  107
(349, 2, 3) =  78
dim 1: [0]: [1 [1 [1, 349] 349] 349]
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
 CompInFortran Run returned, rc=           0           0
In myRunInC()
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
 CompInFortran Run returned, rc=           0           0
In myRunInC()
 CompInC Run returned, rc=           0           0
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
 CompInFortran Run returned, rc=           0           0
In myRunInC()
 CompInC Run returned, rc=           0           0
 In myFinalInFortran routine
           1           1           2                0           0
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
 CompInC Run returned, rc=           0           0
 In myFinalInFortran routine
 In myFinalInFortran routine
 CompInFortran Run returned, rc=           0           0
 CompInFortran Finalize returned, rc=           0           0
 CompInFortran Finalize returned, rc=           0           0
In myFinalInC()
 CompInFortran Finalize returned, rc=           0           0
In myFinalInC()
 ESMF_StatePrint: (pet 0):
 CompInFortran Run returned, rc=           0           0
In myFinalInC()
 ESMF_StatePrint: (pet 2):
  State name: igrid export state
 CompInFortran Run returned, rc=           0           0
  State name: igrid export state
     status: Export State, object count: 1
 ESMF_StatePrint: (pet 4):
  State name: igrid export state
     status: Export State, object count: 1
     reconcile needed: T
 Base name    = igrid export state
     status: Export State, object count: 1
     reconcile needed: T
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
In myRunInC()
     reconcile needed: T
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}     object: 1,name: array1
In myRunInC()
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}{}     object: 1,name: array1
            type: Array
            type: Array
Clock ----------------------------------
In myRunInC()
Clock ----------------------------------
name = Application Clock
     object: 1,name: array1
            type: Array
Clock ----------------------------------
name = Application Clock
timeStep = 
TimeInterval ---------------------------
timeStep = 
TimeInterval ---------------------------
name = Application Clock
timeStep = 
TimeInterval ---------------------------
P0Y0M0DT0H0M2S
end TimeInterval -----------------------
P0Y0M0DT0H0M2S
end TimeInterval -----------------------

startTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------
P0Y0M0DT0H0M2S
end TimeInterval -----------------------

startTime = 
Time -----------------------------------
2004-09-25T00:00:00

stopTime = 
Time -----------------------------------
2004-09-26T00:00:00
end Time -------------------------------
 CompInC Run returned, rc=           0           0
 CompInC Run returned, rc=           0           0

startTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

end Time -------------------------------

stopTime = 
Time -----------------------------------
2004-09-26T00:00:00
end Time -------------------------------

stopTimeEnabled = true
stopTime = 
Time -----------------------------------
2004-09-26T00:00:00
end Time -------------------------------

stopTimeEnabled = true
refTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

currTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

 CompInC Run returned, rc=           0           0

stopTimeEnabled = true
refTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

currTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

prevTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

advanceCount = 0
direction = 1
userChangedDirection = false
 In myFinalInFortran routine
refTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

currTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

prevTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

advanceCount = 0
direction = 1
userChangedDirection = false
prevTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

advanceCount = 0
direction = 1
userChangedDirection = false
 In myFinalInFortran routine
alarmCount = 0
alarmList = 
end Clock ------------------------------

alarmCount = 0
alarmList = 
end Clock ------------------------------

 In myFinalInFortran routine
alarmCount = 0
alarmList = 
end Clock ------------------------------

 Field Print Starts ====>
 Field base status = Ready
   Name = 'Field from C'
 Field Print Starts ====>
 Field base status = Ready
   Name = 'Field from C'
 Field Print Starts ====>
 Field base status = Ready
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 CompInFortran Finalize returned, rc=           0           0
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}   Name = 'Field from C'
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{} Field status =            4
 Field status =            4
 CompInFortran Finalize returned, rc=           0           0
{} Field status =            4
In myFinalInC()
 gridrank =            1
--- ESMCI::Array::print start ---
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 gridrank =            1
--- ESMCI::Array::print start ---
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 gridrank =            1
--- ESMCI::Array::print start ---
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 CompInFortran Finalize returned, rc=           0           0
In myFinalInC()
{}Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
 Root Info (Attributes):
{}Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0xbc1f90:
            rank = 3, typekind = 3, base_addr = 0xbc3db0
            dim[0] = 372  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
 ESMF_StatePrint: (pet 1):
{}Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 4 ~
LocalArrayPrint: Array at address 0x2650d90:
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0xc64970:
            rank = 3, typekind = 3, base_addr = 0xc522f0
In myFinalInC()
            rank = 3, typekind = 3, base_addr = 0x2634c30
            dim[0] = 602  dim[1] = 2  dim[2] = 3  
( 1, 1, 1) =  -1513734472
( 2, 1, 1) =  10946
( 3, 1, 1) =  -1513734472
( 4, 1, 1) =  10946
( 5, 1, 1) =  12336544
            dim[0] = 275  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
( 1, 1, 1) =  1315122888
( 2, 1, 1) =  10983
( 3, 1, 1) =  1315122888
( 4, 1, 1) =  10983
( 5, 1, 1) =  12919520
( 6, 1, 1) =  0
( 7, 1, 1) =  12919520
( 8, 1, 1) =  0
( 9, 1, 1) =  346
(10, 1, 1) =  1522
  skipping to end ...
(266, 2, 3) =  1382
 ESMF_StatePrint: (pet 3):
  Integer, *4, Dim 3, Data values:
( 1, 1, 1) =  -1122599192
( 2, 1, 1) =  10972
( 3, 1, 1) =  -1122599192
( 4, 1, 1) =  10972
( 5, 1, 1) =  40061984
( 6, 1, 1) =  0
( 7, 1, 1) =  40061984
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
  skipping to end ...
(593, 2, 3) =  4
  State name: igrid export state
 ESMF_StatePrint: (pet 5):
  State name: igrid export state
( 6, 1, 1) =  0
( 7, 1, 1) =  12336544
( 8, 1, 1) =  0
( 9, 1, 1) =  1514302389
(10, 1, 1) =  -1077030813
  skipping to end ...
(363, 2, 3) =  73
(364, 2, 3) =  94
(365, 2, 3) =  75
(366, 2, 3) =  51
(367, 2, 3) =  76
(368, 2, 3) =  77
(369, 2, 3) =  54
(370, 2, 3) =  78
(267, 2, 3) =  1383
(268, 2, 3) =  1384
(269, 2, 3) =  1385
(270, 2, 3) =  1386
(271, 2, 3) =  1387
(272, 2, 3) =  1389
(273, 2, 3) =  1390
(594, 2, 3) =  4
(595, 2, 3) =  4
(596, 2, 3) =  4
(597, 2, 3) =  4
     status: Export State, object count: 1
(371, 2, 3) =  77
(372, 2, 3) =  78
dim 1: [0]: [1 [1 [1, 372] 372] 372]
dim 2: undistLBound[0]=1            undistUBound[0]=2
  State name: igrid export state
(274, 2, 3) =  1391
(275, 2, 3) =  1393
dim 1: [0]: [1 [1 [1, 275] 275] 275]
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
(598, 2, 3) =  4
(599, 2, 3) =  4
(600, 2, 3) =  4
(601, 2, 3) =  4
(602, 2, 3) =  4
dim 1: [0]: [1 [1 [1, 602] 602] 602]
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
     status: Export State, object count: 1
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
--- ESMCI::Array::print end ---
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
          -1           1           3               -1          -1
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
     reconcile needed: T
     status: Export State, object count: 1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
           1           1           2                0           0
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
     reconcile needed: T
 Base name    = igrid export state
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
     reconcile needed: T
 Base name    = igrid export state
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}{} Root Info (Attributes):
{}     object: 1,name: array1
     object: 1,name: array1
     object: 1,name: array1
            type: Array
            type: Array
Clock ----------------------------------
Clock ----------------------------------
            type: Array
Clock ----------------------------------
name = Application Clock
name = Application Clock
name = Application Clock
timeStep = 
timeStep = 
TimeInterval ---------------------------
TimeInterval ---------------------------
timeStep = 
P0Y0M0DT0H0M2S
P0Y0M0DT0H0M2S
TimeInterval ---------------------------
 CompInC Finalize returned, rc=           0           0
end TimeInterval -----------------------

end TimeInterval -----------------------
P0Y0M0DT0H0M2S
end TimeInterval -----------------------

 CompInC Finalize returned, rc=           0           0
startTime = 

startTime = 
 CompInC Finalize returned, rc=           0           0
startTime = 
Time -----------------------------------
Time -----------------------------------
Time -----------------------------------
2004-09-25T00:00:00
2004-09-25T00:00:00
2004-09-25T00:00:00
end Time -------------------------------
end Time -------------------------------

end Time -------------------------------

stopTime = 
 All Destroy routines done
  System Test ESMF_CompFortranAndC                                                                                                                                                                                                                                complete.

stopTime = 
 All Destroy routines done
  System Test ESMF_CompFortranAndC                                                                                                                                                                                                                                complete.
 All Destroy routines done
  System Test ESMF_CompFortranAndC                                                                                                                                                                                                                                complete.
 ------------------------------------------------------------
stopTime = 
 ------------------------------------------------------------
 Test finished, localPet =            2
 ------------------------------------------------------------
 ------------------------------------------------------------
Time -----------------------------------
2004-09-26T00:00:00
 ------------------------------------------------------------
 ------------------------------------------------------------
 Test finished, localPet =            0
 ------------------------------------------------------------
 ------------------------------------------------------------
Time -----------------------------------
 ------------------------------------------------------------
 ------------------------------------------------------------
 Test finished, localPet =            4
 ------------------------------------------------------------
 ------------------------------------------------------------
Time -----------------------------------
2004-09-26T00:00:00
 
  System Test ESMF_CompFortranAndC
  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
 
 
  System Test ESMF_CompFortranAndC
  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
 
 
  System Test ESMF_CompFortranAndC
  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
 
  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 359
end Time -------------------------------

stopTimeEnabled = true
  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 359
2004-09-26T00:00:00
end Time -------------------------------

stopTimeEnabled = true
end Time -------------------------------

stopTimeEnabled = true
  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 359
refTime = 
Time -----------------------------------
2004-09-25T00:00:00
refTime = 
Time -----------------------------------
2004-09-25T00:00:00
refTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

end Time -------------------------------

end Time -------------------------------

currTime = 
currTime = 
currTime = 
Time -----------------------------------
Time -----------------------------------
Time -----------------------------------
2004-09-25T00:00:00
2004-09-25T00:00:00
2004-09-25T00:00:00
end Time -------------------------------

end Time -------------------------------
end Time -------------------------------

prevTime = 
prevTime = 
Time -----------------------------------

prevTime = 
Time -----------------------------------
2004-09-25T00:00:00
Time -----------------------------------
2004-09-25T00:00:00
2004-09-25T00:00:00
end Time -------------------------------

end Time -------------------------------
end Time -------------------------------

advanceCount = 0

direction = 1
advanceCount = 0
advanceCount = 0
direction = 1
userChangedDirection = false
alarmCount = 0
userChangedDirection = false
alarmList = 
direction = 1
alarmCount = 0
alarmList = 
end Clock ------------------------------

userChangedDirection = false
alarmCount = 0
 Field Print Starts ====>
end Clock ------------------------------

alarmList = 
end Clock ------------------------------
 Field Print Starts ====>

 Field Print Starts ====>
 Field base status = Ready
 Field base status = Ready
   Name = 'Field from C'
 Field base status = Ready
   Name = 'Field from C'
 Base name    = Field from C
   Name = 'Field from C'
 Base name    = Field from C
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Status: Base = Ready,  object = Ready
 Status: Base = Ready,  object = Ready
 Root Info (Attributes):
 Proxy        = no
{} Root Info (Attributes):
 Proxy        = no
{} Root Info (Attributes):
{} Field status =            4
 Field status =            4
 Field status =            4
 gridrank =            1
 gridrank =            1
 gridrank =            1
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
 Base name    = Field from C
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Base name    = Field from C
 Proxy        = no
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Root Info (Attributes):
{}{}{}Array typekind/rank: Integer*4 / 3 
Array typekind/rank: Integer*4 / 3 
Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
localDeCount = 1
deCount = 6
~ local data in LocalArray for DE 3 ~
localDeCount = 1
~ local data in LocalArray for DE 5 ~
LocalArrayPrint: Array at address 0x1b84fd0:
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x1c5b7a0:
LocalArrayPrint: Array at address 0x10f8510:
            rank = 3, typekind = 3, base_addr = 0x1b86d70
            rank = 3, typekind = 3, base_addr = 0x1c3f2a0
            rank = 3, typekind = 3, base_addr = 0x10e7050
            dim[0] = 307  dim[1] = 2  dim[2] = 3  
            dim[0] = 570  dim[1] = 2  dim[2] = 3  
            dim[0] = 349  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
( 1, 1, 1) =  -749355336
  Integer, *4, Dim 3, Data values:
  Integer, *4, Dim 3, Data values:
( 2, 1, 1) =  11002
( 3, 1, 1) =  -749355336
( 1, 1, 1) =  -1587106056
( 2, 1, 1) =  11168
( 1, 1, 1) =  476573368
( 2, 1, 1) =  11081
( 3, 1, 1) =  -1587106056
( 4, 1, 1) =  11002
( 3, 1, 1) =  476573368
( 4, 1, 1) =  11168
( 5, 1, 1) =  28863840
( 4, 1, 1) =  11081
( 5, 1, 1) =  29618832
( 6, 1, 1) =  0
( 5, 1, 1) =  17723456
( 6, 1, 1) =  0
( 6, 1, 1) =  0
( 7, 1, 1) =  29618832
( 7, 1, 1) =  28863840
( 7, 1, 1) =  17723456
( 8, 1, 1) =  0
( 8, 1, 1) =  0
( 9, 1, 1) =  0
( 8, 1, 1) =  0
( 9, 1, 1) =  278
(10, 1, 1) =  0
( 9, 1, 1) =  -125344326
(10, 1, 1) =  3022
  skipping to end ...
(10, 1, 1) =  1070017927
(298, 2, 3) =  3
  skipping to end ...
(299, 2, 3) =  3
(561, 2, 3) =  0
  skipping to end ...
(340, 2, 3) =  75
(300, 2, 3) =  3
(562, 2, 3) =  0
(301, 2, 3) =  3
(341, 2, 3) =  76
(563, 2, 3) =  -968394866
(302, 2, 3) =  3
(342, 2, 3) =  106
(564, 2, 3) =  1070658410
(565, 2, 3) =  1195718895
(303, 2, 3) =  3
(304, 2, 3) =  3
(343, 2, 3) =  76
(566, 2, 3) =  -1076496014
(344, 2, 3) =  51
(305, 2, 3) =  3
(345, 2, 3) =  77
(567, 2, 3) =  0
(306, 2, 3) =  3
(307, 2, 3) =  3
(346, 2, 3) =  76
(347, 2, 3) =  77
(568, 2, 3) =  0
(569, 2, 3) =  -1231178145
dim 1: [0]: [1 [1 [1, 307] 307] 307]
(348, 2, 3) =  107
(349, 2, 3) =  78
(570, 2, 3) =  1070400582
dim 1: [0]: [1 [1 [1, 570] 570] 570]
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
dim 1: [0]: [1 [1 [1, 349] 349] 349]
dim 2: undistLBound[0]=1            undistUBound[0]=2
--- ESMCI::Array::print end ---
dim 2: undistLBound[0]=1            undistUBound[0]=2
 arrayrank =            3
dim 3: undistLBound[1]=1            undistUBound[1]=3
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
--- ESMCI::Array::print end ---
 arrayrank =            3
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
          -1           1           3               -1          -1
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
          -1          -1          -1               -1          -1
           1           1           2                0           0
          -1           1           3               -1          -1
           1           1           2                0           0
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 CompInC Finalize returned, rc=           0           0
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
 CompInC Finalize returned, rc=           0           0
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
 CompInC Finalize returned, rc=           0           0
 All Destroy routines done
 All Destroy routines done
  System Test ESMF_CompFortranAndC                                                                                                                                                                                                                                complete.
 ------------------------------------------------------------
 ------------------------------------------------------------
 All Destroy routines done
  System Test ESMF_CompFortranAndC                                                                                                                                                                                                                                complete.
 ------------------------------------------------------------
 Test finished, localPet =            5
 ------------------------------------------------------------
 ------------------------------------------------------------
  System Test ESMF_CompFortranAndC                                                                                                                                                                                                                                complete.
 ------------------------------------------------------------
 
  System Test ESMF_CompFortranAndC
  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
 
 
  System Test ESMF_CompFortranAndC
  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
 
 
  System Test ESMF_CompFortranAndC
  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
 
  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 359
 ------------------------------------------------------------
 Test finished, localPet =            3
 ------------------------------------------------------------
 ------------------------------------------------------------
  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 359
 ------------------------------------------------------------
 Test finished, localPet =            1
 ------------------------------------------------------------
 ------------------------------------------------------------
  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 359
